#!/usr/bin/env bash

ROOT=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )/.." &> /dev/null && pwd )
source "${ROOT}/scripts/utils.sh"

set -euo pipefail
cd $ROOT

CONTEXT=""
WORKER_STATESTORE_TYPE=${WORKER_STATESTORE_TYPE:-BucketStateStore}
KUSTOMIZATION_NAME=""

usage() {
    echo -e "Usage: ${BASH_SOURCE[0]} [--help] [--context=""] [--path=""] [--git]"
    echo ""
    echo -e "\t--help, -h,\t Prints this message"
    echo -e "\t--context='', -c,\t Required. The Kubernetes context where to install FluxCD onto."
    echo -e "\t--path='', -b,\t The Repository name, must match the name used when registering the destination. Defaults to context."
    echo -e "\t--git, -g,\t Reads from local Gitea installation (default: Read from local MinIO installation)"
    echo -e "\t--kustomization-name, -k,\t Name of the Flux Kustomizations"
    exit "${1:-0}"
}

load_options() {
    for arg in "$@"; do
      shift
      case "$arg" in
        '--help')                       set -- "$@" '-h'   ;;
        '--context')                    set -- "$@" '-c'   ;;
        '--path')                       set -- "$@" '-b'   ;;
        '--kustomization-name')         set -- "$@" '-k'   ;;
        '--git')                        set -- "$@" '-g'   ;;
        *)                              set -- "$@" "$arg" ;;
      esac
    done

    OPTIND=1
    while getopts "hc:gb:k:" opt
    do
      case "$opt" in
        'h') usage ;;
        'c') CONTEXT=$OPTARG ;;
        'g') WORKER_STATESTORE_TYPE=GitStateStore ;;
        'b') BUCKET_PATH=$OPTARG ;;
        'k') KUSTOMIZATION_NAME=$OPTARG ;;
        *) usage 1 ;;
      esac
    done
    shift $(expr $OPTIND - 1)

    # Exit if name is not set
    if [ -z "${CONTEXT}" ]; then
        usage
        exit 1
    fi
    BUCKET_PATH="${BUCKET_PATH:-"$CONTEXT"}"
}

patch_kind_networking() {
    local file_name=$1
    if [[ "${CONTEXT}" =~ ^kind-.* ]]; then
        PLATFORM_DESTINATION_IP=$(docker inspect platform-control-plane | yq ".[0].NetworkSettings.Networks.kind.IPAddress")
        sed "s/172.18.0.2/${PLATFORM_DESTINATION_IP}/g" ${file_name}
    else
        cat "${file_name}"
    fi
}

patch_flux_resources() {
    local name="$(echo "${CONTEXT}" | cut -d "-" -f 2)"
    if [[ ! $KUSTOMIZATION_NAME == "" ]]; then
        name=$KUSTOMIZATION_NAME
    fi

    sed "s/worker-1/${BUCKET_PATH}/g" |
        sed "s/kratix-workload-dependencies/kratix-${name}-dependencies/g" |
        sed "s/kratix-workload-resources/kratix-${name}-resources/g"
}

install_gitops() {
    CONTEXT="${CONTEXT:-$1}"
    BUCKET_PATH="${BUCKET_PATH:-$2}"
    resource_file=${ROOT}/hack/destination/gitops-tk-resources.yaml
    if [ ${WORKER_STATESTORE_TYPE} = "GitStateStore" ]; then
        resource_file=${ROOT}/hack/destination/gitops-tk-resources-git.yaml;
        copy_gitea_credentials kind-platform ${CONTEXT} flux-system
    fi

    # install flux crds
    kubectl --context "${CONTEXT}" apply --filename ${ROOT}/hack/destination/gitops-tk-install.yaml

    patch_kind_networking $resource_file | patch_flux_resources | kubectl --context "${CONTEXT}" apply --filename -
}

main() {
    load_options $@
    install_gitops
}

if [ "$0" = "${BASH_SOURCE[0]}" ]; then
    main $@
fi
