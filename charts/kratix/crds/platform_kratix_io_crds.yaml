apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: bucketstatestores.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: BucketStateStore
    listKind: BucketStateStoreList
    plural: bucketstatestores
    singular: bucketstatestore
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BucketStateStore is the Schema for the bucketstatestores API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BucketStateStoreSpec defines the desired state of BucketStateStore
              properties:
                bucketName:
                  type: string
                endpoint:
                  type: string
                insecure:
                  type: boolean
                path:
                  description: 'Path within the StateStore to write documents. This path should be allocated to Kratix as it will create, update, and delete files within this path. Path structure begins with provided path and ends with namespaced destination name: <StateStore.Spec.Path>/<Destination.Spec.Path>/<Destination.Metadata.Namespace>/<Destination.Metadata.Name>/'
                  type: string
                secretRef:
                  description: SecretRef specifies the Secret containing authentication credentials
                  properties:
                    name:
                      description: name is unique within a namespace to reference a secret resource.
                      type: string
                    namespace:
                      description: namespace defines the space within which the secret name must be unique.
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - bucketName
                - endpoint
              type: object
            status:
              description: BucketStateStoreStatus defines the observed state of BucketStateStore
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: destinations.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: Destination
    listKind: DestinationList
    plural: destinations
    singular: destination
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Destination is the Schema for the Destinations API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DestinationSpec defines the desired state of Destination
              properties:
                path:
                  description: 'Path within the StateStore to write documents. This path should be allocated to Kratix as it will create, update, and delete files within this path. Path structure begins with provided path and ends with namespaced destination name: <StateStore.Spec.Path>/<Destination.Spec.Path>/<Destination.Metadata.Namespace>/<Destination.Metadata.Name>/'
                  type: string
                secretRef:
                  description: SecretRef specifies the Secret containing authentication credentials
                  properties:
                    name:
                      description: name is unique within a namespace to reference a secret resource.
                      type: string
                    namespace:
                      description: namespace defines the space within which the secret name must be unique.
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                stateStoreRef:
                  description: StateStoreReference is a reference to a StateStore
                  properties:
                    kind:
                      enum:
                        - BucketStateStore
                        - GitStateStore
                      type: string
                    name:
                      type: string
                  required:
                    - kind
                    - name
                  type: object
              type: object
            status:
              description: DestinationStatus defines the observed state of Destination
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: gitstatestores.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: GitStateStore
    listKind: GitStateStoreList
    plural: gitstatestores
    singular: gitstatestore
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: GitStateStore is the Schema for the gitstatestores API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: GitStateStoreSpec defines the desired state of GitStateStore
              properties:
                branch:
                  default: main
                  type: string
                path:
                  description: 'Path within the StateStore to write documents. This path should be allocated to Kratix as it will create, update, and delete files within this path. Path structure begins with provided path and ends with namespaced destination name: <StateStore.Spec.Path>/<Destination.Spec.Path>/<Destination.Metadata.Namespace>/<Destination.Metadata.Name>/'
                  type: string
                secretRef:
                  description: SecretRef specifies the Secret containing authentication credentials
                  properties:
                    name:
                      description: name is unique within a namespace to reference a secret resource.
                      type: string
                    namespace:
                      description: namespace defines the space within which the secret name must be unique.
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                url:
                  type: string
              type: object
            status:
              description: GitStateStoreStatus defines the observed state of GitStateStore
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kratix-platform-system/kratix-platform-serving-cert
    controller-gen.kubebuilder.io/version: v0.12.0
  name: promises.platform.kratix.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kratix-platform-webhook-service
          namespace: kratix-platform-system
          path: /convert
      conversionReviewVersions:
        - v1alpha1
        - v1beta1
  group: platform.kratix.io
  names:
    kind: Promise
    listKind: PromiseList
    plural: promises
    singular: promise
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Promise is the Schema for the promises API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PromiseSpec defines the desired state of Promise
              properties:
                api:
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
                dependencies:
                  items:
                    description: Resources represents the manifest workload to be deployed on Destinations
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                destinationSelectors:
                  items:
                    properties:
                      matchLabels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  type: array
                workflows:
                  properties:
                    promise:
                      properties:
                        configure:
                          items:
                            type: object
                          type: array
                          x-kubernetes-preserve-unknown-fields: true
                        delete:
                          items:
                            type: object
                          type: array
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    resource:
                      properties:
                        configure:
                          items:
                            type: object
                          type: array
                          x-kubernetes-preserve-unknown-fields: true
                        delete:
                          items:
                            type: object
                          type: array
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                  type: object
              type: object
            status:
              description: PromiseStatus defines the observed state of Promise
              properties:
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: workplacements.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: WorkPlacement
    listKind: WorkPlacementList
    plural: workplacements
    singular: workplacement
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkPlacement is the Schema for the workplacements API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkPlacementSpec defines the desired state of WorkPlacement
              properties:
                promiseName:
                  type: string
                resourceName:
                  type: string
                targetDestinationName:
                  type: string
                workloads:
                  description: Workload represents the manifest workload to be deployed on destination
                  items:
                    description: Workload represents the manifest workload to be deployed on destination
                    properties:
                      content:
                        type: string
                      filepath:
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: WorkPlacementStatus defines the observed state of WorkPlacement
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: works.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: Work
    listKind: WorkList
    plural: works
    singular: work
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Work is the Schema for the works API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkSpec defines the desired state of Work
              properties:
                destinationSelectors:
                  description: DestinationSelectors is used for selecting the destination
                  properties:
                    promise:
                      items:
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      type: array
                    resource:
                      items:
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      type: array
                  type: object
                promiseName:
                  type: string
                replicas:
                  description: -1 denotes dependencies, 1 denotes Resource Request
                  type: integer
                resourceName:
                  type: string
                workloads:
                  description: Workload represents the manifest workload to be deployed on destination
                  items:
                    description: Workload represents the manifest workload to be deployed on destination
                    properties:
                      content:
                        type: string
                      filepath:
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: WorkStatus defines the observed state of Work
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
