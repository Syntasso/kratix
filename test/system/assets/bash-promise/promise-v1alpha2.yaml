# Role and rolebinding in a separate file
apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  name: REPLACEBASH
  labels:
    kratix.io/promise-version: v1.0.0
spec:
  api:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: REPLACEBASHes.test.kratix.io
    spec:
      group: test.kratix.io
      names:
        kind: REPLACEBASH
        plural: REPLACEBASHes
        singular: REPLACEBASH
      scope: Namespaced
      versions:
        - name: v1alpha1
          schema:
            openAPIV3Schema:
              properties:
                spec:
                  properties:
                    suffix:
                      description: Suffix to be appended to the name
                      type: string
                      default: "default"
                    container0Cmd:
                      description: Arbitrary code to be executed by the container 0
                      type: string
                    container1Cmd:
                      description: Arbitrary code to be executed by the container 1
                      type: string
                  type: object
              type: object
          served: true
          storage: false
        - name: v1alpha2
          schema:
            openAPIV3Schema:
              properties:
                spec:
                  properties:
                    container0Cmd:
                      description: Arbitrary code to be executed by the container 0
                      type: string
                    container1Cmd:
                      description: Arbitrary code to be executed by the container 1
                      type: string
                    container2Cmd:
                      description: Arbitrary code to be executed by the container 2
                      type: string
                      default: "kubectl create namespace declarative-$(yq '.metadata.name' /kratix/input/object.yaml)-v1alpha2 --dry-run=client -oyaml > /kratix/output/namespace-v1alpha2.yaml"
                  type: object
              type: object
          served: true
          storage: true
  dependencies:
    - apiVersion: v1
      kind: Namespace
      metadata:
        name: REPLACEBASH-static-decl-v1alpha2
  destinationSelectors:
  - matchLabels:
      environment: dev
  workflows:
    resource:
      configure:
        - apiVersion: platform.kratix.io/v1alpha1
          kind: Pipeline
          metadata:
            name: first
          spec:
            rbac:
              permissions:
                - apiGroups: [ "" ]
                  resources: [ "configmaps" ]
                  verbs: [ "list" ]
                  resourceNamespace: "*"
                - apiGroups: [ "apps" ]
                  resources: [ "deployments" ]
                  verbs: [ "list" ]
                  resourceNamespace: "pipeline-perms-ns"
                - apiGroups: [ "" ]
                  resources: [ "secrets", "services" ]
                  verbs: [ "list" ]
                - apiGroups: [ "rbac.authorization.k8s.io" ]
                  resources: [ "roles" ]
                  verbs: [ "list" ]
            containers:
              - image: syntassodev/bash-promise:dev1
                name: bash-promise-test-c0
                env:
                  - name: CONTAINER_INDEX
                    value: "0"
              - image: syntassodev/bash-promise:dev1
                name: bash-promise-test-c1
                env:
                  - name: CONTAINER_INDEX
                    value: "1"
              - image: syntassodev/bash-promise:dev1
                name: bash-promise-test-c2
                env:
                  - name: CONTAINER_INDEX
                    value: "2"
        - apiVersion: platform.kratix.io/v1alpha1
          kind: Pipeline
          metadata:
            name: second
          spec:
            containers:
              - image: syntassodev/bash-promise:dev1
                name: bash-promise-test-c0
                command:
                  - sh
                  - -c
                args:
                  - |
                    kubectl create configmap $(yq '.metadata.name' /kratix/input/object.yaml)-$(yq '.spec.suffix // "default"' /kratix/input/object.yaml)-v2 --namespace default -o yaml --dry-run=client > /kratix/output/configmap.yaml
      delete:
        - apiVersion: platform.kratix.io/v1alpha1
          kind: Pipeline
          metadata:
            name: first
          spec:
            containers:
              - image: syntassodev/bash-promise:dev1
                name: bash-promise-test-c0
                env:
                  - name: CONTAINER_INDEX
                    value: "1"
    promise:
      configure:
        - apiVersion: platform.kratix.io/v1alpha1
          kind: Pipeline
          metadata:
            name: first
          spec:
            rbac:
              serviceAccount: REPLACEBASH-existing-custom-sa
            containers:
              - image: syntassodev/bash-promise:dev1
                name: bash-promise
                env:
                  - name: VERSION
                    value: v1alpha2
      delete:
        - apiVersion: platform.kratix.io/v1alpha1
          kind: Pipeline
          metadata:
            name: first
          spec:
            rbac:
              serviceAccount: REPLACEBASH-new-custom-sa
            containers:
              - image: syntassodev/bash-promise:dev1
                name: bash-promise
                env:
                  - name: VERSION
                    value: v1alpha2
