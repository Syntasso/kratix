---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: bucketstatestores.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: BucketStateStore
    listKind: BucketStateStoreList
    plural: bucketstatestores
    singular: bucketstatestore
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BucketStateStore is the Schema for the bucketstatestores API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BucketStateStoreSpec defines the desired state of BucketStateStore
            properties:
              authMethod:
                default: accessKey
                description: AuthMethod used to access the StateStore
                enum:
                - accessKey
                - IAM
                type: string
              bucketName:
                type: string
              endpoint:
                type: string
              insecure:
                type: boolean
              path:
                description: 'Path within the StateStore to write documents. This
                  path should be allocated to Kratix as it will create, update, and
                  delete files within this path. Path structure begins with provided
                  path and ends with namespaced destination name: <StateStore.Spec.Path>/<Destination.Spec.Path>/<Destination.Metadata.Namespace>/<Destination.Metadata.Name>/'
                type: string
              secretRef:
                description: SecretRef specifies the Secret containing authentication
                  credentials
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - bucketName
            - endpoint
            type: object
          status:
            description: BucketStateStoreStatus defines the observed state of BucketStateStore
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
